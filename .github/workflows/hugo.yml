name: Deploy Hugo Site to Pages # See https://gohugo.io/hosting-and-deployment/hosting-on-github/

on:
  push:
    branches: 
      - main
  
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      HUGO_VERSION: 0.123.6 # @todo: Change to ENV variable
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Install yarn
        run: npm install --global yarn
      - name: Check out
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      # - uses: actions/cache@v4
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Install Node.js dependencies
        # run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
        run: "[[ -f yarn.lock ]] && yarn install --frozen-lockfile || true"

      - name: getData
        run: yarn run getData
        env:
          AIRTABLE_BASE: ${{ secrets.AIRTABLE_BASE }}
          AIRTABLE_KEY: ${{ secrets.AIRTABLE_KEY }}

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      # - name: Build and Publish Site
      #   uses: chabad360/hugo-gh-pages@master
      #   with:
      #     githubToken: ${{ secrets.BUILD_TOKEN }}
      #     args: --gc --minify --cleanDestinationDir --verbose --debug

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
